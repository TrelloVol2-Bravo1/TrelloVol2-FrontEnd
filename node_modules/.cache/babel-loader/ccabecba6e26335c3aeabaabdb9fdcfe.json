{"ast":null,"code":"var _jsxFileName = \"/home/przemek/Documents/TrelloVol2-FrontEnd/src/components/table.component.tsx\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport Card from \"react-bootstrap/Card\";\nimport styles from \"./tables.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport ApiService from \"../services/api.service\";\nexport default class TablesComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirect: false,\n      redirectUrl: ''\n    };\n    this.lists = [];\n\n    this.render = () => {\n      UserService.subject.subscribe(() => {\n        this.setState({\n          redirect: true,\n          redirectUrl: '/login'\n        });\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderRedirect(), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.handleBackToBoards(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"Back to boards\"));\n    };\n  }\n\n  handleBackToBoards() {\n    this.setState({\n      redirect: true,\n      redirectUrl: 'tables'\n    });\n  }\n\n  async componentDidMount() {\n    this.lists = await ApiService.GetTables();\n    this.refresh();\n  }\n\n  createLists() {\n    let table = [];\n\n    if (this.state.refresh) {\n      let view = [];\n      this.lists.forEach(tab => {\n        view.push( /*#__PURE__*/React.createElement(Card, {\n          className: styles.card,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }\n        }, tab.getTableName()), /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.btnGroup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: styles.btn,\n          variant: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }\n        }, \"Open\"), /*#__PURE__*/React.createElement(Button, {\n          className: styles.btn,\n          variant: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }\n        }, \"Delete\")))));\n      });\n      table.push(view);\n    }\n\n    return table;\n  }\n\n  renderRedirect() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: '/' + this.state.redirectUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/przemek/Documents/TrelloVol2-FrontEnd/src/components/table.component.tsx"],"names":["React","Redirect","UserService","Card","styles","Button","ApiService","TablesComponent","Component","state","redirect","redirectUrl","lists","render","subject","subscribe","setState","renderRedirect","handleBackToBoards","componentDidMount","GetTables","refresh","createLists","table","view","forEach","tab","push","card","getTableName","btnGroup","btn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAGA,eAAe,MAAMC,eAAN,SAA8BP,KAAK,CAACQ,SAApC,CAA8C;AAAA;AAAA;AAAA,SAEzDC,KAFyD,GAEjD;AACJC,MAAAA,QAAQ,EAAE,KADN;AAEJC,MAAAA,WAAW,EAAE;AAFT,KAFiD;AAAA,SAOzDC,KAPyD,GAOpC,EAPoC;;AAAA,SA2CzDC,MA3CyD,GA2ChD,MAAM;AACXX,MAAAA,WAAW,CAACY,OAAZ,CAAoBC,SAApB,CAA8B,MAAM;AAChC,aAAKC,QAAL,CAAc;AACVN,UAAAA,QAAQ,EAAE,IADA;AAEVC,UAAAA,WAAW,EAAE;AAFH,SAAd;AAIH,OALD;AAMA,0BAAO,0CACF,KAAKM,cAAL,EADE,eAEH;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,kBAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFG,CAAP;AAIH,KAtDwD;AAAA;;AASzDA,EAAAA,kBAAkB,GAAG;AACjB,SAAKF,QAAL,CAAc;AACVN,MAAAA,QAAQ,EAAE,IADA;AAEVC,MAAAA,WAAW,EAAE;AAFH,KAAd;AAIH;;AAED,QAAMQ,iBAAN,GAA0B;AACtB,SAAKP,KAAL,GAAa,MAAMN,UAAU,CAACc,SAAX,EAAnB;AACA,SAAKC,OAAL;AACH;;AAEOC,EAAAA,WAAR,GAAsB;AAClB,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAI,KAAKd,KAAL,CAAWY,OAAf,EAAwB;AACpB,UAAIG,IAAW,GAAG,EAAlB;AACA,WAAKZ,KAAL,CAAWa,OAAX,CAAmBC,GAAG,IAAI;AACtBF,QAAAA,IAAI,CAACG,IAAL,eAAU,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAEvB,MAAM,CAACwB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACN,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKF,GAAG,CAACG,YAAJ,EADL,CADJ,eAII;AAAK,UAAA,SAAS,EAAEzB,MAAM,CAAC0B,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAE1B,MAAM,CAAC2B,GAA1B;AAA+B,UAAA,OAAO,EAAE,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAE3B,MAAM,CAAC2B,GAA1B;AAA+B,UAAA,OAAO,EAAE,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAJJ,CADM,CAAV;AAWH,OAZD;AAaAR,MAAAA,KAAK,CAACI,IAAN,CAAWH,IAAX;AACH;;AACD,WAAOD,KAAP;AACH;;AAeON,EAAAA,cAAR,GAAyB;AACrB,QAAI,KAAKR,KAAL,CAAWC,QAAf,EAAyB;AACrB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,MAAO,KAAKD,KAAL,CAAWE,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AA5DwD","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport Card from \"react-bootstrap/Card\";\nimport styles from \"./tables.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport ApiService from \"../services/api.service\";\nimport {ListModel} from \"../models/list.model\";\n\nexport default class TablesComponent extends React.Component {\n\n    state = {\n        redirect: false,\n        redirectUrl: ''\n    }\n\n    lists: ListModel[] = [];\n\n    handleBackToBoards() {\n        this.setState({\n            redirect: true,\n            redirectUrl: 'tables'\n        })\n    }\n\n    async componentDidMount() {\n        this.lists = await ApiService.GetTables();\n        this.refresh();\n    }\n\n    private createLists() {\n        let table = [];\n        if (this.state.refresh) {\n            let view: any[] = [];\n            this.lists.forEach(tab => {\n                view.push(<Card className={styles.card}>\n                    <Card.Body>\n                        <Card.Title>\n                            {tab.getTableName()}\n                        </Card.Title>\n                        <div className={styles.btnGroup}>\n                            <Button className={styles.btn} variant={\"success\"}>Open</Button>\n                            <Button className={styles.btn} variant={\"danger\"}>Delete</Button>\n                        </div>\n                    </Card.Body>\n                </Card>)\n            });\n            table.push(view);\n        }\n        return table;\n    }\n\n    render = () => {\n        UserService.subject.subscribe(() => {\n            this.setState({\n                redirect: true,\n                redirectUrl: '/login'\n            })\n        });\n        return <>\n            {this.renderRedirect()}\n            <button onClick={() => this.handleBackToBoards()}>Back to boards</button>\n        </>;\n    }\n\n    private renderRedirect() {\n        if (this.state.redirect) {\n            return <Redirect to={'/'  + this.state.redirectUrl}/>\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}