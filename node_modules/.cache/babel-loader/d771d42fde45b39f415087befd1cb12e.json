{"ast":null,"code":"var _jsxFileName = \"/home/przemek/Documents/TrelloVol2-FrontEnd/src/components/tables.component.tsx\";\nimport React from \"react\";\nimport ApiService from \"../services/api.service\";\nimport { TableModel } from \"../models/table.model\";\nimport styles from \"./tables.module.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport UserService from \"../services/user.service\";\nimport { Redirect } from \"react-router-dom\";\nexport default class TablesComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      refresh: false,\n      redirect: false,\n      creationView: false,\n      newTableName: '',\n      redirectUrl: ''\n    };\n    this.tables = [];\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: '/' + this.state.redirectUrl,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    this.tables = await ApiService.GetTables();\n    this.refresh();\n  }\n\n  deleteTable(table) {\n    const index = this.tables.indexOf(table);\n\n    if (index !== -1) {\n      ApiService.DeleteTable(table).then(() => {\n        this.tables.splice(index, 1);\n        this.refresh();\n      });\n    }\n  }\n\n  openTable(table) {\n    this.setState({\n      redirectUrl: `table/id=${table.getTableId()}`,\n      redirect: true\n    });\n  }\n\n  refresh() {\n    this.setState({\n      refresh: false\n    });\n    this.setState({\n      refresh: true\n    });\n  }\n\n  createTableView() {\n    let table = [];\n\n    if (this.state.refresh) {\n      let view = []; // view = [];\n\n      this.tables.forEach(tab => {\n        view.push( /*#__PURE__*/React.createElement(Card, {\n          className: styles.card,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }\n        }, tab.getTableName()), /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.btnGroup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: styles.btn,\n          onClick: () => {\n            this.openTable(tab);\n          },\n          variant: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }\n        }, \"Open\"), /*#__PURE__*/React.createElement(Button, {\n          className: styles.btn,\n          onClick: () => {\n            this.deleteTable(tab);\n          },\n          variant: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }\n        }, \"Delete\")))));\n      });\n      table.push(view);\n    }\n\n    return table;\n  }\n\n  async createTable(name) {\n    const response = await ApiService.CreateTable(name);\n    const table = new TableModel(response.id, response.name, response.author_id);\n    this.tables.push(table);\n    this.refresh();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  createTableCreationView() {\n    if (this.state.creationView) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.createNewButtonDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        name: 'newTableName',\n        value: this.state.newTableName,\n        onChange: this.handleChange.bind(this),\n        type: \"text\",\n        placeholder: \"New table name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.createNewButtonDiv,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.createTable(this.state.newTableName),\n        variant: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, \"Create\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.toggleCreationView(false),\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, \"Hide\")));\n    }\n  }\n\n  toggleCreationView(status) {\n    this.setState({\n      creationView: status\n    });\n  }\n\n  render() {\n    UserService.subject.subscribe(() => {\n      this.setState({\n        redirect: true\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderRedirect(), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.creationForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, this.createTableCreationView()), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.tables,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, this.createTableView()), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.createNewButtonDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggleCreationView(true),\n      className: styles.createNewButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, \"Create table\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/przemek/Documents/TrelloVol2-FrontEnd/src/components/tables.component.tsx"],"names":["React","ApiService","TableModel","styles","Card","Button","Form","UserService","Redirect","TablesComponent","Component","state","refresh","redirect","creationView","newTableName","redirectUrl","tables","renderRedirect","componentDidMount","GetTables","deleteTable","table","index","indexOf","DeleteTable","then","splice","openTable","setState","getTableId","createTableView","view","forEach","tab","push","card","getTableName","btnGroup","btn","createTable","name","response","CreateTable","id","author_id","handleChange","event","target","value","createTableCreationView","createNewButtonDiv","bind","toggleCreationView","status","render","subject","subscribe","container","creationForm","createNewButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ApiService from \"../services/api.service\";\nimport {TableModel} from \"../models/table.model\";\nimport styles from \"./tables.module.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport UserService from \"../services/user.service\";\nimport {Redirect} from \"react-router-dom\";\n\nexport default class TablesComponent extends React.Component {\n\n    state = {\n        refresh: false,\n        redirect: false,\n        creationView: false,\n        newTableName: '',\n        redirectUrl: ''\n    }\n\n    tables: TableModel[] = [];\n\n    async componentDidMount() {\n        this.tables = await ApiService.GetTables();\n        this.refresh();\n    }\n\n    private deleteTable(table: TableModel) {\n        const index = this.tables.indexOf(table);\n        if (index !== -1) {\n            ApiService.DeleteTable(table).then(() => {\n                this.tables.splice(index, 1);\n                this.refresh();\n            });\n        }\n    }\n\n    private openTable(table: TableModel) {\n        this.setState({\n            redirectUrl: `table/id=${table.getTableId()}`,\n            redirect: true\n        })\n    }\n\n    private refresh(): void {\n        this.setState({refresh: false});\n        this.setState({refresh: true});\n    }\n\n    private createTableView() {\n        let table = [];\n        if (this.state.refresh) {\n            let view: any[] = [];\n            // view = [];\n            this.tables.forEach(tab => {\n                view.push(<Card className={styles.card}>\n                    <Card.Body>\n                        <Card.Title>\n                            {tab.getTableName()}\n                        </Card.Title>\n                        <div className={styles.btnGroup}>\n                            <Button className={styles.btn} onClick={() => {\n                                this.openTable(tab);\n                            }} variant={\"success\"}>Open</Button>\n                            <Button className={styles.btn} onClick={() => {\n                                this.deleteTable(tab);\n                            }} variant={\"danger\"}>Delete</Button>\n                        </div>\n                    </Card.Body>\n                </Card>)\n            });\n            table.push(view);\n        }\n        return table;\n    }\n\n    private async createTable(name: string) {\n        const response = await ApiService.CreateTable(name);\n        const table = new TableModel(response.id, response.name, response.author_id);\n        this.tables.push(table);\n        this.refresh();\n\n    }\n\n    handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    private createTableCreationView() {\n        if (this.state.creationView) {\n            return (<>\n                    <div className={styles.createNewButtonDiv}>\n                        <Form.Group>\n                            <Form.Control name={'newTableName'} value={this.state.newTableName}\n                                          onChange={this.handleChange.bind(this)} type=\"text\"\n                                          placeholder=\"New table name\"/>\n                        </Form.Group>\n                    </div>\n                    <div className={styles.createNewButtonDiv}>\n                        <Button onClick={() => this.createTable(this.state.newTableName)}\n                                variant={\"success\"}>Create</Button>\n                        <Button onClick={() => this.toggleCreationView(false)} variant={\"danger\"}>Hide</Button>\n                    </div>\n                </>\n            );\n        }\n    }\n\n    private toggleCreationView(status: boolean) {\n        this.setState({creationView: status})\n    }\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to={'/' + this.state.redirectUrl}/>\n        }\n    }\n\n    render() {\n        UserService.subject.subscribe(() => {\n            this.setState({\n                redirect: true,\n            })\n        });\n        return (<>\n            {this.renderRedirect()}\n            <div className={styles.container}>\n                <div className={styles.creationForm}>\n                    {this.createTableCreationView()}\n                </div>\n                <div className={styles.tables}>\n                    {this.createTableView()}\n                </div>\n                <div className={styles.createNewButtonDiv}>\n                    <Button onClick={() => this.toggleCreationView(true)} className={styles.createNewButton}>\n                        Create table\n                    </Button>\n                </div>\n            </div>\n        </>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}