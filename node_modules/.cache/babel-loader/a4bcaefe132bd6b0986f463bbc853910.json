{"ast":null,"code":"var _jsxFileName = \"/home/przemek/Documents/TrelloVol2-FrontEnd/src/components/login.component.tsx\";\nimport React from \"react\";\nimport styles from \"../styles.module.css\";\nimport { Redirect } from \"react-router-dom\";\nimport ApiService from \"../services/api.service\";\nimport UserService from \"../services/user.service\";\nimport Button from \"react-bootstrap/Button\";\nexport default class LoginComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      errorMessage: \"\",\n      redirect: false,\n      redirectURL: \"\"\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\" + this.state.redirectURL,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    };\n  }\n\n  setErrorMessage(message) {\n    this.setState({\n      errorMessage: message\n    });\n  }\n\n  validate() {\n    this.setErrorMessage(\"\");\n\n    if (this.state.name.length < 5) {\n      this.setErrorMessage(\"Login has to be at least 5 characters length.\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async login() {\n    if (this.validate()) {\n      const url = ApiService.getURL() + \"user/auth\";\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          password: this.state.password,\n          email: this.state.name\n        })\n      };\n      const response = await fetch(url, requestOptions);\n      const data = await response.json();\n\n      if (data.status_code === \"success\") {\n        UserService.LogIn(data.api_key, data.user_id);\n        this.redirect(\"\");\n      } else {\n        this.setErrorMessage(data.message);\n      }\n    }\n  }\n\n  redirect(path) {\n    this.setState({\n      redirectURL: path,\n      redirect: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderRedirect(), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.loginForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Login form:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Login:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      value: this.state.name,\n      onChange: e => this.handleChange(e),\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      value: this.state.password,\n      onChange: e => this.handleChange(e),\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      className: this.state.errorMessage.length > 0 ? styles.errorMessage : styles.notDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.login(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.redirect(\"register\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Register\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/przemek/Documents/TrelloVol2-FrontEnd/src/components/login.component.tsx"],"names":["React","styles","Redirect","ApiService","UserService","Button","LoginComponent","Component","state","name","password","errorMessage","redirect","redirectURL","renderRedirect","handleChange","event","setState","currentTarget","value","setErrorMessage","message","validate","length","login","url","getURL","requestOptions","method","headers","body","JSON","stringify","email","response","fetch","data","json","status_code","LogIn","api_key","user_id","path","render","loginForm","form","e","notDisplay","buttons"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"../styles.module.css\";\nimport {Redirect } from \"react-router-dom\";\nimport ApiService from \"../services/api.service\";\nimport UserService from \"../services/user.service\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class LoginComponent extends React.Component {\n  state = {\n    name: \"\",\n    password: \"\",\n    errorMessage: \"\",\n    redirect: false,\n    redirectURL: \"\",\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={\"/\" + this.state.redirectURL} />;\n    }\n  };\n\n  setErrorMessage(message: string) {\n    this.setState({ errorMessage: message });\n  }\n\n  validate() {\n    this.setErrorMessage(\"\");\n    if (this.state.name.length < 5) {\n      this.setErrorMessage(\"Login has to be at least 5 characters length.\");\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async login() {\n    if (this.validate()) {\n      const url = ApiService.getURL() + \"user/auth\";\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: this.state.name,\n          password: this.state.password,\n          email: this.state.name,\n        }),\n      };\n      const response = await fetch(url, requestOptions);\n      const data = await response.json();\n      if (data.status_code === \"success\") {\n        UserService.LogIn(data.api_key, data.user_id);\n        this.redirect(\"\");\n      } else {\n        this.setErrorMessage(data.message);\n      }\n    }\n  }\n\n  redirect(path: string) {\n    this.setState({ redirectURL: path, redirect: true });\n  }\n\n  handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        {this.renderRedirect()}\n        <div className={styles.loginForm}>\n          <h1>Login form:</h1>\n          <div className={styles.form}>\n            <label>\n              <span>Login:</span>\n              <input\n                name=\"name\"\n                value={this.state.name}\n                onChange={(e) => this.handleChange(e)}\n                type=\"text\"\n              />\n            </label>\n            <label>\n              <span>Password:</span>\n              <input\n                name={\"password\"}\n                value={this.state.password}\n                onChange={(e) => this.handleChange(e)}\n                type=\"password\"\n              />\n            </label>\n            <h3\n              className={\n                this.state.errorMessage.length > 0\n                  ? styles.errorMessage\n                  : styles.notDisplay\n              }\n            >\n              {this.state.errorMessage}\n            </h3>\n            <div className={styles.buttons}>\n              <Button onClick={() => this.login()}>Login</Button>\n              <Button onClick={() => this.redirect(\"register\")}>\n                Register\n              </Button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}