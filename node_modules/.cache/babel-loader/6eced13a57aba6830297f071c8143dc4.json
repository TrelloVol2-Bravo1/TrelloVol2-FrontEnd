{"ast":null,"code":"var _jsxFileName = \"/home/przemek/Documents/TrelloVol2-FrontEnd/src/routes/AnonymousRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserService from \"../services/user.service\";\n\nfunction AnonymousRoute({\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!UserService.IsAuthenticated()) {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 24\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: '/',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 24\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default AnonymousRoute;","map":{"version":3,"sources":["/home/przemek/Documents/TrelloVol2-FrontEnd/src/routes/AnonymousRoute.js"],"names":["React","Route","Redirect","UserService","AnonymousRoute","component","Component","rest","props","IsAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,cAAT,CAAwB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAxB,EAAyD;AAErD,sBACI,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAEC,KAAK,IAAI;AAC9B,UAAI,CAACL,WAAW,CAACM,eAAZ,EAAL,EAAoC;AAChC,4BAAO,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,OAFD,MAEO;AACH,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AACJ,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AASH;;AAED,eAAeJ,cAAf","sourcesContent":["import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport UserService from \"../services/user.service\";\n\nfunction AnonymousRoute({component: Component, ...rest}) {\n\n    return (\n        <Route {...rest} render={props => {\n            if (!UserService.IsAuthenticated()) {\n                return <Component {...props} />\n            } else {\n                return <Redirect to={'/'}/>\n            }\n        }}/>\n    );\n}\n\nexport default AnonymousRoute;\n"]},"metadata":{},"sourceType":"module"}