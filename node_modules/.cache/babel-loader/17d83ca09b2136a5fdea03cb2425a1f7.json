{"ast":null,"code":"var _jsxFileName = \"/home/przemek/Documents/TrelloVol2-FrontEnd/src/components/register.component.tsx\";\nimport React from \"react\";\nimport styles from \"../styles.module.css\";\nimport { Redirect } from \"react-router-dom\";\nimport ApiService from \"../services/api.service\";\nimport Button from \"react-bootstrap/Button\";\nexport default class RegisterComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      repeatPassword: \"\",\n      email: \"\",\n      errorMessage: \"\",\n      redirect: false\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: '/',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 20\n          }\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        errorMessage: \"\",\n        login: \"\",\n        password: \"\",\n        email: \"\",\n        repeatPassword: \"\"\n      });\n    };\n  }\n\n  setErrorMessage(message) {\n    if (message.length > 0) {\n      this.setState({\n        errorMessage: message\n      });\n    }\n  }\n\n  validate() {\n    this.setState({\n      errorMessage: \"\"\n    });\n\n    if (this.state.name.length < 5) {\n      this.setErrorMessage(\"Login has to be at least 5 characters length.\");\n      return false;\n    } else {\n      if (this.state.password !== this.state.repeatPassword) {\n        this.setErrorMessage(\"Passwords are not equal.\");\n        return false;\n      } else {\n        if (this.state.password.length < 8) {\n          this.setErrorMessage(\"Password has to be at least 8 characters length.\");\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }\n  }\n\n  async login() {\n    if (this.validate()) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n          name: this.state.name,\n          password: this.state.password,\n          email: this.state.email\n        })\n      };\n      const url = ApiService.getURL() + \"user\";\n      const response = await fetch(url, requestOptions);\n      const data = await response.json();\n\n      if (data.status_code === 'success') {\n        this.setState({\n          redirect: true\n        });\n      } else {\n        this.setErrorMessage(data.message);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderRedirect(), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.loginForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, \"Register form\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, \"Login:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: 'name',\n      value: this.state.name,\n      onChange: e => this.handleChange(e),\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: 'email',\n      value: this.state.email,\n      onChange: e => this.handleChange(e),\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: 'password',\n      value: this.state.password,\n      onChange: e => this.handleChange(e),\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, \"Repeat password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: 'repeatPassword',\n      value: this.state.repeatPassword,\n      onChange: e => this.handleChange(e),\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      className: this.state.errorMessage.length > 0 ? styles.errorMessage : styles.notDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, this.state.errorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.buttons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.login(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.reset(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \"Reset\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/przemek/Documents/TrelloVol2-FrontEnd/src/components/register.component.tsx"],"names":["React","styles","Redirect","ApiService","Button","RegisterComponent","Component","state","name","password","repeatPassword","email","errorMessage","redirect","renderRedirect","handleChange","event","setState","currentTarget","value","reset","login","setErrorMessage","message","length","validate","requestOptions","method","headers","body","JSON","stringify","url","getURL","response","fetch","data","json","status_code","render","loginForm","form","e","notDisplay","buttons"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"../styles.module.css\";\nimport {Redirect} from \"react-router-dom\";\nimport ApiService from \"../services/api.service\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class RegisterComponent extends React.Component {\n    state = {\n        name: \"\",\n        password: \"\",\n        repeatPassword: \"\",\n        email: \"\",\n        errorMessage: \"\",\n        redirect: false\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            return <Redirect to={'/'}/>\n        }\n    }\n\n    setErrorMessage(message: string): void {\n        if (message.length > 0) {\n            this.setState({errorMessage: message});\n        }\n    }\n\n    validate() {\n        this.setState({errorMessage: \"\"});\n        if (this.state.name.length < 5) {\n            this.setErrorMessage(\"Login has to be at least 5 characters length.\");\n            return false;\n        } else {\n            if (this.state.password !== this.state.repeatPassword) {\n                this.setErrorMessage(\"Passwords are not equal.\");\n                return false;\n            } else {\n                if (this.state.password.length < 8) {\n                    this.setErrorMessage(\n                        \"Password has to be at least 8 characters length.\"\n                    );\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n        }\n    }\n\n    async login() {\n        if (this.validate()) {\n            const requestOptions = {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\", 'Access-Control-Allow-Origin': '*'},\n                body: JSON.stringify({\n                    name: this.state.name,\n                    password: this.state.password,\n                    email: this.state.email,\n                }),\n            };\n            const url = ApiService.getURL() + \"user\";\n            const response = await fetch(url, requestOptions);\n            const data = await response.json();\n            if (data.status_code === 'success') {\n                this.setState({redirect: true});\n            } else {\n                this.setErrorMessage(data.message);\n            }\n        }\n    }\n\n    handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n        this.setState({\n            [event.currentTarget.name]: event.currentTarget.value\n        });\n    }\n\n    reset = () => {\n        this.setState({\n            errorMessage: \"\",\n            login: \"\",\n            password: \"\",\n            email: \"\",\n            repeatPassword: \"\",\n        });\n    };\n\n    render() {\n        return (\n            <>\n                {this.renderRedirect()}\n                <div className={styles.loginForm}>\n                    <h1>Register form</h1>\n                    <div className={styles.form}>\n                        <label>\n                            <span>Login:</span>\n                            <input\n                                name={'name'}\n                                value={this.state.name}\n                                onChange={e => this.handleChange(e)}\n                                type=\"text\"\n                            />\n                        </label>\n                        <label>\n                            <span>Email:</span>\n                            <input\n                                name={'email'}\n                                value={this.state.email}\n                                onChange={e => this.handleChange(e)}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            <span>Password:</span>\n                            <input\n                                name={'password'}\n                                value={this.state.password}\n                                onChange={e => this.handleChange(e)}\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            <span>Repeat password:</span>\n                            <input\n                                name={'repeatPassword'}\n                                value={this.state.repeatPassword}\n                                onChange={e => this.handleChange(e)}\n                                type=\"password\"\n                            />\n                        </label>\n                        <h3\n                            className={\n                                this.state.errorMessage.length > 0\n                                    ? styles.errorMessage\n                                    : styles.notDisplay\n                            }\n                        >\n                            {this.state.errorMessage}\n                        </h3>\n                        <div className={styles.buttons}>\n                            <Button onClick={() => this.login()}>Register</Button>\n                            <Button onClick={() => this.reset()}>Reset</Button>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}